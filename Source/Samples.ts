var Samples = {
    Default: [
        `comment block start`,
        `comment block : GLS ((General Language Syntax)) is a single syntax`,
        `comment block : that compiles into common OOP languages.`,
        `comment block : ---`,
        `comment block : Write code in the editor,`,
        `comment block : and see the language output in real time!`,
        `comment block end`,
        ``,
        `file start : Program`,
        `    main start`,
        `        print : ("GLS is awesome!")`,
        `        print : ("Select a sample above to see how it works!")`,
        `    main end`,
        `file end : Program`
    ],
    Variables: [
        `comment block start`,
        `comment block : GLS ((General Language Syntax)) is a single syntax`,
        `comment block : that compiles into common OOP languages.`,
        `comment block : ---`,
        `comment block : Write code in the editor,`,
        `comment block : and see the language output in real time!`,
        `comment block end`,
        ``,
        `file start : Program`,
        `    main start`,
        `        comment line : Simple declarations`,
        `        variable : foo string`,
        `        variable : bar number 7`,
        `        `,
        `        comment line : Assignments`,
        `        variable : qux string foo`,
        `        variable : baz number bar`,
        `        `,
        `        comment line : Interesting values`,
        `        variable : quux number infinity`,
        `        variable : corge boolean true`,
        `    main end`,
        `file end : Program`
    ],
    Operations: [
        `comment block start`,
        `comment block : GLS ((General Language Syntax)) is a single syntax`,
        `comment block : that compiles into common OOP languages.`,
        `comment block : ---`,
        `comment block : Write code in the editor,`,
        `comment block : and see the language output in real time!`,
        `comment block end`,
        ``,
        `file start : Program`,
        `    main start`,
        `        variable : foo number 7`,
        `        `,
        `        comment line : Operation chains`,
        `        operation : foo (multiply by) 2`,
        `        operation : foo (decrease by) bar times { parenthesis : { operation : bar minus 3 } }`,
        `        variable : bar number { operation : foo (divide by) 3 plus 4 times 7 (multiply by ) foo }`,
        `        `,
        `        `,
        `    main end`,
        `file end : Program`
    ],
    Conditionals: [
        `comment block start`,
        `comment block : GLS ((General Language Syntax)) is a single syntax`,
        `comment block : that compiles into common OOP languages.`,
        `comment block : ---`,
        `comment block : Write code in the editor,`,
        `comment block : and see the language output in real time!`,
        `comment block end`,
        ``,
        `file start : Program`,
        `    main start`,
        `        comment line : Conditionals`,
        `        if start : { operation : 2 plus 2 (equual to) 4 }`,
        `            print : ("Seems legit")`,
        `        else if start : { operation : 2 plus 2 (equal to) 5}`,
        `            print : ("That seems wrong...")`,
        `        else start`,
        `            print : ("Math.")`,
        `        if end`,
        `    main end`,
        `file end : Program`
    ],
    "Arrays and Lists": [
        `comment block start`,
        `comment block : GLS ((General Language Syntax)) is a single syntax`,
        `comment block : that compiles into common OOP languages.`,
        `comment block : ---`,
        `comment block : Write code in the editor,`,
        `comment block : and see the language output in real time!`,
        `comment block end`,
        ``,
        `file start : Program`,
        `    main start`,
        `        `,
        `    main end`,
        `file end : Program`
    ],
    Dictionaries: [
        `comment line : coming soon!`
    ],
    Loops: [
        `comment block start`,
        `comment block : GLS ((General Language Syntax)) is a single syntax`,
        `comment block : that compiles into common OOP languages.`,
        `comment block : ---`,
        `comment block : Write code in the editor,`,
        `comment block : and see the language output in real time!`,
        `comment block end`,
        ``,
        `file start : Program`,
        `    main start`,
        `        comment line : While`,
        `        while start : true`,
        `            print : "Hey!"`,
        `            break`,
        `        while end`,
        `        `,
        `        comment line : For ((range)`,
        `        for numbers start : i int 0 10`,
        `            print : i`,
        `        for numbers end`,
        `        `,
        `        comment line: For ((collection))`,
        `        comment line : Coming soon!`,
        `    main end`,
        `file end : Program`
    ],
    Lambdas: [
        `comment line : Coming soon!`
    ],
    Classes: [
        `comment line : Coming soon!`
    ]
};

export default Samples;
